#+begin_export latex
\thispagestyle{empty}
\newgeometry{margin=0pt}

\begin{tikzpicture}[remember picture, overlay]
  \begin{scope}

    % STRUTTURA ESTERNA (ANGOLI E COLORAZIONE)
    \node[
      isosceles triangle,
      isosceles triangle apex angle=90,
      draw,
      rotate=315,
      fill=darkblue,
      minimum size =55cm] (triangoloPrimoLivelloAngoloInferiore)
    at ($(current page.south east)$)
    {};

    \node[
      isosceles triangle,
      isosceles triangle apex angle=90,
      draw,
      rotate=315,
      fill=footerColorSurrounding,
      minimum size =50cm] (triangoloSecondoLivelloAngoloInferiore)
    at ($(current page.south east)$)
    {};

    \node[
      isosceles triangle,
      isosceles triangle apex angle=90,
      draw,
      rotate=315,
      fill=darkdark,
      minimum size =35cm] (triangoloTerzoLivelloAngoloInferiore)
    at ($(current page.south east)$)
    {};

    \node[
      isosceles triangle,
      isosceles triangle apex angle=90,
      draw,
      rotate=315,
      fill=white,
      minimum size =32cm] (triangoloQuartoLivelloAngoloInferiore)
    at ($(current page.south east)$)
    {};


    \node[
      isosceles triangle,
      isosceles triangle apex angle=90,
      draw,
      rotate=135,
      fill=white,
      minimum size =31cm] (triangoloSuperiore)
    at ($(current page.north west)$)
    {};


    % STRUTTURA DEL CERCHIO E IL SUO CONTENUTO
    \node [circle, minimum size=15cm, fill=white, draw=darkblue, line width = 7pt, xshift=11cm, yshift=1cm](centro)
    at ($(current page.west)$)
    {};

    \coordinate (logo) at (10.7,-7.5);
    \node[rectangle, inner sep = 0pt, outer sep = 0pt, minimum width = 3.5cm, minimum height = 3.5cm]
    at (logo){\includegraphics[width=3.5cm, height=3.5cm]{./Risorse/Start-Page/FedericoII.png}};

    \node[scale=1.5] at (5.85,-10){\LARGE{StealBot}};

    \node[rectangle,
      draw,
      minimum width=4cm,
      minimum height=2mm,
      xshift= 6.42cm,
      yshift= -11cm,
      minimum height=2mm,
      fill = darkblue] (r) at (0,0) {};
 
    \node[scale=1.5] at (11,-13){\itshape{\LARGE{Università degli studi di Napoli}}};
    \node[scale=1.5] at (11,-15){\itshape{\LARGE{Federico II}}};


    %% STRUTTURA ANGOLO SINISTRO (angolo north-west)
    \node[scale=3] at (1,-1){\includegraphics[height=10pt,width=10pt]{./Risorse/Start-Page/calendar.png}};
    \node[scale=2] at (6,-1){\itshape{\LARGE{A.A. 2022-2023}}};

    %% STRUTTURA ANGOLO DESTRO (angolo south-east) - Informazioni studenti
    %% Valentino Bocchetti
    \node[scale=3] at (12,-21){\includegraphics[height=10pt,width=10pt]{./Risorse/Start-Page/graduated.png}};
    \node[scale=1.5] at (16.5, -21.23){\textbf{Valentino Bocchetti - N86003405}};

    %% Valentina Annunziata
    \node[scale=3] at (12,-22.8){\includegraphics[height=10pt,width=10pt]{./Risorse/Start-Page/graduated_alt.png}};
    \node[scale=1.5] at (16.7, -22.9){\textbf{Valentina Annunziata - N86003280}};

    %% Francesco Ciccarelli
    \node[scale=3] at (12,-24.6){\includegraphics[height=10pt,width=10pt]{./Risorse/Start-Page/graduated.png}};
    \node[scale=1.5] at (16.56, -24.7){\textbf{Francesco Ciccarelli - N86003285}};

    %% Giulia Caputo
    \node[scale=3] at (12,-26.4){\includegraphics[height=10pt,width=10pt]{./Risorse/Start-Page/graduated_alt.png}};
    \node[scale=1.5] at (15.8, -26.5){\textbf{Giulia Caputo - N86003429}};
  \end{scope}

\end{tikzpicture}

\newpage
\restoregeometry
\renewcommand*\contentsname{\hfill Indice \hfill}
\tableofcontents
#+end_export
#+OPTIONS: date:nil title:nil toc:nil
#+STARTUP: overview hideblocks
#+SETUPFILE: ~/config/emacs/setup-org-latex.setup
#+LATEX: \pagebreak
* Presentazione
:PROPERTIES:
:CUSTOM_ID: Presentazione progetto
:END:
#+begin_export latex
\noindent\makebox[\textwidth]{\includegraphics[width=\paperwidth]{Risorse/Title.png}}
#+end_export
** Descrizione della traccia
:PROPERTIES:
:CUSTOM_ID: Descrizione traccia
:END:
Si richiede la realizzazione di una ~BotNET~ \autocite{BOTNET} per il recupero di quante più informazioni possibili sulla dispositivo in cui una delle componenti della BotNET (a scelta dello studente) venga eseguito.
*** Tecnologie e linguaggi richiesti
:PROPERTIES:
:CUSTOM_ID: Tecnologie e linguaggi
:END:

Si richiede un applicativo scritto in ~Python~ \autocite{DefinizionePython} che utilizzi come strumento di comunicazione le ~socket~ \autocite{DefinizioneSocket}
** Implementazione del sistema 
:PROPERTIES:
:CUSTOM_ID: Implementazione sistema
:END:

Il progetto si concretizza in 2 componenti ben definite:
+ Un ~Bot Master~ per la gestione dei dati ricevuti dal ~bot slave~ al quale inpartisce comandi sfruttando una connessione tramite socket asincrona;
+ Il ~Bot slave~, che ha il compito di ricavare quante più informazioni possibili sullo stato della macchina sul quale viene eseguito \autocite{notaBotSlave1} .
#+LATEX: \vfill
** Guida al Bot Master
:PROPERTIES:
:CUSTOM_ID: Guida (Bot master)
:END:
*** Primo avvio
:PROPERTIES:
:CUSTOM_ID: Primo avvio (Bot master)
:END:
Durante la fase di avvio il programma effettua le seguenti operazioni:
+ Controlla che ~host~ e ~porta~ \autocite{infoHostPortMaster} siano disponibili per la successiva creazione della socket;
+ Esegue una connessione al dbms utilizzato per il salvataggio delle informazioni e inizializza la ~tabella~ utilizzata per lo scopo (se non precedentemente presente);
+ Inizializza la socket in attesa di nuove connessioni dal client a cui impartirà comandi da eseguire;

Nel momento in cui viene effettuata una nuova connessione, il server invia la richiesta effettuata dall'utente al client e in base a questa automaticamente:
+ Salva l'informazione sul database (che viene mostrata all'utente attraverso lo standard output);
+ Nel caso in cui si trattasse di un file (identificato da un campo ~Header~ a inizio richiesta), lo salva automaticamente, per poter essere fruibile successivamente.
*** Memorizzazione dei dati
:PROPERTIES:
:CUSTOM_ID: Memorizzazione dati (Bot master)
:END:
Il sistema permette inoltre utilizza un DBMS \autocite{postgres} per il salvataggio dei dati ricavati dal /bot slave/ durante la sua esecuzione.
** Guida al Bot Slave
:PROPERTIES:
:CUSTOM_ID: Guida (Bot Slave)
:END:
*** Primo avvio
:PROPERTIES:
:CUSTOM_ID: Primo avvio (Bot slave)
:END:
Durante la fase di avvio il programma effettua le seguenti operazioni:
+ Controlla che ~host~ e ~porta~ \autocite{infoHostPortSlave} siano disponibili per la successiva creazione della socket;
+ Esegue un test sull'effettivo stato di attività del server
  - In caso di esito negativo attende e ritenta;
  - In caso di esito positivo invece esegue le istruzioni impartite dal Master.
** Analisi della struttura del progetto
:PROPERTIES:
:CUSTOM_ID: Analisi progetto
:END:
La struttura del progetto è così strutturata:

#+begin_export latex
% Server
\noindent
\begin{minipage}[t]{0.47\textwidth}
  \begin{itemize}
    \item Un file \texttt{main.py}, utilizzato per eseguire il tutto;
    \item Una cartella \texttt{utilities}, contentente:
    \begin{itemize}
      \item \texttt{async\_socket\_server.py} $\rightarrow$ Funzioni per la gestione della connessione socket;
      \item \texttt{bot\_master\_utility.py} $\rightarrow$ Funzioni di supporto al server;
      \item \texttt{database\_handler.py} $\rightarrow$ Funzioni di supporto per la gestione del DBMS.
    \end{itemize}
  \end{itemize}
\end{minipage}
\hfill
% Client
\noindent
\begin{minipage}[t]{0.47\textwidth}
  \begin{itemize}
    \item Un file \texttt{main.py}, utilizzato per eseguire il tutto;
    \item Una cartella \texttt{utilities}, contentente:
    \begin{itemize}
      \item \texttt{async\_socket\_client.py} $\rightarrow$ Funzioni per la gestione della connessione socket;
      \item \texttt{bot\_master\_utility.py} $\rightarrow$ Funzioni di supporto al client;
    \end{itemize}
  \end{itemize}
\end{minipage}
#+end_export
** Report dei dati recuperati
:PROPERTIES:
:CUSTOM_ID: Report dati
:END:
TODO: Aggiungere screenshot/tabella dei record ottenuti mediante il bot
* Codice sorgente sviluppato
:PROPERTIES:
:CUSTOM_ID: Codice sorgente
:END:
Il codice sorgente prodotto durante lo sviluppo di $StealBot^{\copyright}$ è disponibile sulla piattaforma [[https://github.com/][GitHub]], che ne ha permesso anche il versionamento.

Di seguito riportiamo un link per il [[https://github.com/luftmensch-luftmensch/StealBot][download]] \autocite{informazioniRepository}
* Risultati della prima prova
:PROPERTIES:
:CUSTOM_ID: Report prima prova
:END:
Durante la prima prova di testing, effettuata il 16 novembre, abbiamo recuperato le seguenti informazioni:
** Informazioni sulla macchina (OS: ~Linux-5.15.0-52-generic-x86_64-with-glibc2.35~)
:PROPERTIES:
:CUSTOM_ID: Tabelle con info della macchina
:END:
#+begin_export latex
%% CPU
\begin{center}
    \textbf{CPU}
\end{center}

\begin{tblr}{hlines = {0.9pt}, vlines = {0.9pt}, row{1} = {pink!60}, colspec = {X[1.5,c]X[c]X[c]X[c]X[c]}, width = \textwidth}
        Brand & CPU Count & CPU Count logical & Frequenza Minima & Frequenza Massima\\
        \texttt{Intel(R) Core(TM) i7-8569U} & 4 & 4 & 2.80GHz & 4.70GHz
\end{tblr}

%% RAM

\begin{center}
    \textbf{RAM}
\end{center}

\begin{tblr}{hlines = {0.9pt}, vlines = {0.9pt}, row{1} = {pink!60}, colspec = {X[c]X[c]}, width = \textwidth}
        Memoria utilizzata & Memoria Totale\\

        790.86MB & 3.83GB\\
\end{tblr}

%% DISCO

\begin{center}
    \textbf{DISCO}
\end{center}

\begin{tblr}{hlines = {0.9pt}, vlines = {0.9pt}, row{1} = {pink!60}, colspec = {X[c]X[c]X[c]}, width = \textwidth}
        Device & Mountpoint & Tipo di partizione\\

        \texttt{/dev/sda2} & \texttt{/boot/efi} & \texttt{vfat}\\

        \texttt{/dev/sda3} & \texttt{/} & \texttt{ext4}
\end{tblr}

%% STATO DEL DISCO

\begin{center}
    \textbf{STATO DEL DISCO}
\end{center}

\begin{tblr}{hlines = {0.9pt}, vlines = {0.9pt}, row{1} = {pink!60}, colspec = {X[c]X[c]}, width = \textwidth}
        Letture & Scritture\\
        691.32MB & 31.47MB
\end{tblr}

%% NETWORK

\begin{center}
    \textbf{NETWORK}
\end{center}

\begin{tblr}{hlines = {0.9pt}, vlines = {0.9pt}, row{1} = {pink!60},
             cell{2-4}{1} = {purplelight}, cell{5-7}{1} = {orange-apricot}, cell{8-15}{1} = {lavanda},
             colspec = {X[0.5,c]X[1.5,c]X[c]X[c]}, width = \textwidth}

        Interfaccia & IP & NetMask & Broadcast\\

        loop & 127.0.0.1 & 255.0.0.0 & Nessuna\\
        loop & ::1 & ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff & Nessuna\\
        loop &  00:00:00:00:00:00 & Nessuna & Nessuna\\

        enp0s3 &  10.0.2.15 & 255.255.255.0 & 10.0.2.255\\
        enp0s3 &  fe80::9406:ff6d:57df:81b6\%enp0s3 &  ffff:ffff:ffff:ffff:: & Nessuna\\
        enp0s3 &  08:00:27:63:f0:81 &  Nessuna & ff:ff:ff:ff:ff:ff\\

        enp0s8 & 192.168.1.114 & 255.255.255.0 & 192.168.1.255\\
        enp0s8 & fdac:c077:5c58:0:7913:ba74:dcde:5157 & ffff:ffff:ffff:ffff:: & Nessuna\\
        enp0s8 & fdac:c077:5c58:0:3595:1b00:316b:ad04 & ffff:ffff:ffff:ffff:: & Nessuna\\
        enp0s8 & fe80::b224:2d33:82d5:b5de\%enp0s8 & ffff:ffff:ffff:ffff:: & Nessuna\\
        enp0s8 & fdac:c077:5c58:0:7913:ba74:dcde:5157 & ffff:ffff:ffff:ffff:: & Nessuna\\
        enp0s8 & fdac:c077:5c58:0:3595:1b00:316b:ad04 & ffff:ffff:ffff:ffff:: & Nessuna\\
        enp0s8 & fe80::b224:2d33:82d5:b5de\%enp0s8 & ffff:ffff:ffff:ffff:: & Nessuna \\
        enp0s8 & 08:00:27:e5:6a:b8 & Nessuna & ff:ff:ff:ff:ff:ff
\end{tblr}

%% UTENTI ATTIVI

\begin{center}
    \textbf{UTENTI ATTIVI}
\end{center}

\begin{tblr}{hlines = {0.9pt}, vlines = {0.9pt}, row{1} = {pink!60}, colspec = {X[c]X[c]}, width = \textwidth}
        Nome utente & Attivo da\\

        \textbf{alessio} & 2022-11-16 09:04:16
\end{tblr}
#+end_export
** File recuperati durante l'esecuzione del bot slave
:PROPERTIES:
:CUSTOM_ID: File recuperati
:END:
+ ~.bash_history~ $\rightarrow$ Contiene tutta la cronologia dei comandi dati dall'utente;
+ ~.bash_logout~ $\rightarrow$ Contiene le operazioni da eseguire durante il logout dell'utente;
+ ~.bashrc~ $\rightarrow$ File di configurazione della shell bash;
+ ~bookmarks~ $\rightarrow$ Contiene i segnalibri definiti dall'utente
+ ~meta-release-lts~  e ~ubuntu.22.04~ $\rightarrow$ Contengono le informazioni aggiuntive della macchina su cui gira il bot slave;
+ ~.pam_environment~ $\rightarrow$ Contiene variabili per la lingua;
+ ~.passwords~ $\rightarrow$ File contentente ~eCambiata~
+ ~.profile~ $\rightarrow$ Impostazioni aggiuntive per la shell ~bash~
+ ~.python_history~ $\rightarrow$ Contiene la cronologia dei comandi effettuati dall'interprete interattivo /python/;
+ ~user-dirs.dirs~ $\rightarrow$ Contiene le informazioni sulle variabili delle directory della home dell'utente.
* Ringraziamenti
:PROPERTIES:
:CUSTOM_ID: Ringraziamenti
:END:
Ringraziamo il professore [[mailto:a.botta@unina.it][Alessio Botta]] per lo splendido corso, che ci ha permesso di comprendere a pieno tecnologie di tutti fanno largo uso.
